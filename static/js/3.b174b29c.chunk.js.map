{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Messages/Messages.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/Dialogs.container.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","active","src","avatar","alt","NavLink","to","name","Messages","messages","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","dialogsElements","dialogPage","dialogData","map","key","messagesElements","dialogMessage","m","newMessageText","isAuth","dialogs","dialogsItems","value","addMessage","Redirect","mapStateToPropsForRedirect","state","auth","compose","connect","dispatch","addMessagesActionCreator","Component","RedirectComponent","this","React"],"mappings":"+FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,OAAS,0B,gGCerMC,EAXI,SAACC,GAChB,IAAIC,EAAO,WAAaD,EAAME,GAC9B,OAEI,yBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,QAC3C,yBAAKC,IAAKP,EAAMQ,OAAQC,IAAI,KAChB,kBAACC,EAAA,EAAD,CAASC,GAAIV,GAAOD,EAAMY,QCOvBC,EAfE,SAACb,GAMd,OACI,yBAAKG,UAAWC,IAAEU,UAEd,yBAAKX,UAAWC,IAAEW,SAAUf,EAAMe,W,0CC8BxCC,EAAcC,YAAiB,IAY/BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAXL,SAACnB,GACpB,OACI,0BAAMqB,SAAUrB,EAAMsB,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,SAAU,CAACC,IAAUX,GAAeJ,KAAK,iBAAiBgB,YAAa,wBAEvG,6BAAK,mDAOFC,EA5CC,SAAC7B,GAEb,IAAI8B,EAAkB9B,EAAM+B,WAAWC,WAAWC,KAAI,SAAA5B,GAAM,OAAI,kBAAC,EAAD,CAAYO,KAAMP,EAAOO,KAAMsB,IAAK7B,EAAOH,GAAIA,GAAIG,EAAOH,GAAIM,OAAQH,EAAOE,SAEzI4B,EAAmBnC,EAAM+B,WAAWK,cAAcH,KAAI,SAAAI,GAAC,OAAI,kBAAC,EAAD,CAAUtB,QAASsB,EAAEtB,QAASmB,IAAKG,EAAEnC,GAAIA,GAAImC,EAAEnC,QACzFF,EAAM+B,WAAWO,eAQtC,OAAKtC,EAAMuC,OAGP,yBAAKpC,UAAWC,IAAEoC,SACd,yBAAKrC,UAAWC,IAAEqC,cACbX,GAGL,yBAAK3B,UAAWC,IAAEU,UACbqB,GAEL,6BACI,kBAACjB,EAAD,CAAqBG,SAfb,SAACqB,GACjB1C,EAAM2C,WAAWD,EAAMJ,qBAED,kBAACM,EAAA,EAAD,CAAUjC,GAAI,Y,+CCrBxCkC,EAA6B,SAACC,GAAD,MAAY,CACzCP,OAAQO,EAAMC,KAAKR,S,OCqBvBS,sBACIC,aAlBkB,SAACH,GACnB,MAAO,CACHf,WAAYe,EAAMf,WAClBQ,OAAQO,EAAMC,KAAKR,WAEF,SAACW,GACtB,MAAO,CACHP,WAAY,SAACL,GACTY,EAASC,YAAyBb,UDTd,SAACc,GAAe,IACtCC,EADqC,iLAGnC,OAAKC,KAAKtD,MAAMuC,OACT,kBAACa,EAAcE,KAAKtD,OADI,kBAAC4C,EAAA,EAAD,CAAUjC,GAAI,eAHV,GACX4C,IAAMH,WAStC,OAD+BH,YAAQJ,EAARI,CAAoCI,KCSvEL,CAGEnB","file":"static/js/3.b174b29c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2lx8R\",\"dialogsItems\":\"Dialogs_dialogsItems__33Qcz\",\"active\":\"Dialogs_active__M-1OE\",\"messages\":\"Dialogs_messages__30bWz\",\"message\":\"Dialogs_message__unuMu\",\"dialog\":\"Dialogs_dialog__2HHx7\"};","import React, { Component } from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialog/' + props.id\r\n    return (\r\n\r\n        <div className={s.dialog + ' ' + s.active}>\r\n<img src={props.avatar} alt=\"\"/>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React, { Component } from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Messages = (props) => {\r\n\r\n    \r\n\r\n\r\n\r\n    return (\r\n        <div className={s.messages}>\r\n           \r\n            <div className={s.message}>{props.message}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Messages;","import React, { Component } from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Messages from './Messages/Messages';\r\nimport { Redirect } from 'react-router-dom';\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport { Textarea } from '../common/FormsControl/FormsControl';\r\nimport { required, maxLengthCreator } from '../../utilits/validation/validators';\r\n\r\n\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogsElements = props.dialogPage.dialogData.map(dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id} avatar={dialog.src} />);\r\n\r\n    let messagesElements = props.dialogPage.dialogMessage.map(m => <Messages message={m.message} key={m.id} id={m.id} />);\r\n    let newMessageText = props.dialogPage.newMessageText;\r\n\r\n   \r\n\r\n\r\n    let addNewMessage = (value) => {\r\n        props.addMessage(value.newMessageText)\r\n    };\r\n    if (!props.isAuth) return <Redirect to={\"/login\"} />\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n           \r\n            <div className={s.messages}>\r\n                {messagesElements}\r\n            </div>\r\n            <div>\r\n                <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst maxLength50 = maxLengthCreator(50)\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} validate={[required, maxLength50 ]} name='newMessageText' placeholder={'Enter your message'} />\r\n            </div>\r\n            <div><button>addMessage</button></div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)\r\n\r\nexport default Dialogs;","import React from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'} />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    \r\n\r\nlet ConnectAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return ConnectAuthRedirectComponent;\r\n}","import { addMessagesActionCreator } from '../../redux/reducerdialogs';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux'\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogPage: state.dialogPage,\r\n        isAuth: state.auth.isAuth    }\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (newMessageText) => {\r\n            dispatch(addMessagesActionCreator(newMessageText))\r\n        },      \r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default \r\ncompose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)"],"sourceRoot":""}